{
  "project_api_token": "eyJhbGciOiJIUzI1NiJ9.eyJ4IjoxfQ.NLc1yhn2PDZhJaWTI2dtHkHzn2r8cND1MwiwrVtNlx0",
  "trials_total_count":100,
  "trials_limit":10,
  "search_space":{
    "version":1,
    "optimizers_space":{
      "auger_ml.optimizers.pso_optimizer.PSOOptimizer":{
        "phig":0.5,
        "phip":0.5,
        "omega":0.5
      },
      "auger_ml.warmstart_optimizer.WarmStartOptimizer":{
        "num_trials":10
      },
      "auger_ml.optimizers.de_optimizer.DESaturationOptimizer":{
        "phi":0.5,
        "rho":0.7
      },
      "auger_ml.optimizers.de_optimizer.DEEliminationOptimizer":{
        "phi":0.5,
        "rho":0.7
      },
      "auger_ml.optimizers.skopt_base_optimizer.SkOptBaseOptimizer":{
        "acq_func":"gp_hedge",
        "batch_size":5,
        "acq_optimizer":"sampling",
        "base_estimator":"GP"
      },
      "auger_ml.optimizers.skopt_async_optimizer.SkOptAsyncOptimizer":{
        "acq_func":"gp_hedge",
        "batch_size":5,
        "acq_optimizer":"sampling",
        "base_estimator":"GP"
      },
      "auger_ml.optimizers.tpe_hyperopt_optimizer.TPEHyperoptOptimizer":{
        "batch_size":5
      },
      "auger_ml.optimizers.hyperopt_async_optimizer.HyperoptAsyncOptimizer":{
        "batch_size":5
      },
      "auger_ml.optimizers.anneal_hyperopt_optimizer.AnnealHyperoptOptimizer":{
        "batch_size":5
      },
      "auger_ml.optimizers.random_search_hyperopt_optimizer.RandomSearchHyperoptOptimizer":{
        "batch_size":5
      }
    },
    "user_config_dict":{
      "model_type":"classification",
      "model_group":{
        "regression":{
          "k_folds":5,
          "scoring":"r2",
          "selectors":{

          },
          "model_type":"regression",
          "preprocessors":{

          },
          "learning_algorithms":{
            "sklearn.svm.SVR":{
              "C":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.0001,
                  25.0
                ],
                "tunable":true
              },
              "gamma":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.0001,
                  25.0
                ],
                "tunable":true
              },
              "degree":{
                "log":false,
                "type":"int",
                "bounds":[
                  1,
                  5
                ],
                "tunable":true
              },
              "kernel":{
                "type":"categorical",
                "values":[
                  "rbf",
                  "sigmoid",
                  "poly"
                ],
                "tunable":true
              },
              "epsilon":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.0001,
                  1.0
                ],
                "tunable":true
              }
            },
            "auger_ml.algorithms.cat_boost.CatBoostRegressor":{
              "rsm":{
                "log":false,
                "type":"float",
                "bounds":[
                  0.5,
                  1.0
                ],
                "tunable":true
              },
              "depth":{
                "log":false,
                "type":"int",
                "bounds":[
                  3,
                  10
                ],
                "tunable":true
              },
              "l2_leaf_reg":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.001,
                  100.0
                ],
                "tunable":true
              },
              "border_count":{
                "log":false,
                "type":"int",
                "bounds":[
                  16,
                  128
                ],
                "tunable":true
              },
              "n_estimators":{
                "log":true,
                "type":"int",
                "bounds":[
                  100,
                  800
                ],
                "tunable":true
              },
              "learning_rate":{
                "log":false,
                "type":"float",
                "bounds":[
                  0.01,
                  0.3
                ],
                "tunable":true
              },
              "loss_function":{
                "type":"categorical",
                "values":[
                  "RMSE"
                ],
                "tunable":false
              },
              "model_size_reg":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.001,
                  10.0
                ],
                "tunable":true
              },
              "allow_writing_files":{
                "type":"categorical",
                "values":[
                  false
                ],
                "tunable":false
              },
              "feature_border_type":{
                "type":"categorical",
                "values":[
                  "Median",
                  "UniformAndQuantiles",
                  "GreedyLogSum",
                  "MaxLogSum",
                  "MinEntropy"
                ],
                "tunable":true
              }
            }
          }
        },
        "timeseries":{
          "k_folds":5,
          "scoring":"r2",
          "selectors":{

          },
          "model_type":"timeseries",
          "preprocessors":{

          },
          "learning_algorithms":{
            "sklearn.svm.SVR":{
              "C":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.0001,
                  25.0
                ],
                "tunable":true
              },
              "gamma":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.0001,
                  25.0
                ],
                "tunable":true
              },
              "degree":{
                "log":false,
                "type":"int",
                "bounds":[
                  1,
                  5
                ],
                "tunable":true
              },
              "kernel":{
                "type":"categorical",
                "values":[
                  "rbf",
                  "sigmoid",
                  "poly"
                ],
                "tunable":true
              },
              "epsilon":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.0001,
                  1.0
                ],
                "tunable":true
              }
            },
            "auger_ml.algorithms.cat_boost.CatBoostRegressor":{
              "rsm":{
                "log":false,
                "type":"float",
                "bounds":[
                  0.5,
                  1.0
                ],
                "tunable":true
              },
              "depth":{
                "log":false,
                "type":"int",
                "bounds":[
                  3,
                  10
                ],
                "tunable":true
              },
              "l2_leaf_reg":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.001,
                  100.0
                ],
                "tunable":true
              },
              "border_count":{
                "log":false,
                "type":"int",
                "bounds":[
                  16,
                  128
                ],
                "tunable":true
              },
              "n_estimators":{
                "log":true,
                "type":"int",
                "bounds":[
                  100,
                  800
                ],
                "tunable":true
              },
              "learning_rate":{
                "log":false,
                "type":"float",
                "bounds":[
                  0.01,
                  0.3
                ],
                "tunable":true
              },
              "loss_function":{
                "type":"categorical",
                "values":[
                  "RMSE"
                ],
                "tunable":false
              },
              "model_size_reg":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.001,
                  10.0
                ],
                "tunable":true
              },
              "allow_writing_files":{
                "type":"categorical",
                "values":[
                  false
                ],
                "tunable":false
              },
              "feature_border_type":{
                "type":"categorical",
                "values":[
                  "Median",
                  "UniformAndQuantiles",
                  "GreedyLogSum",
                  "MaxLogSum",
                  "MinEntropy"
                ],
                "tunable":true
              }
            }
          }
        },
        "classification":{
          "k_folds":5,
          "scoring":"accuracy",
          "selectors":{

          },
          "model_type":"classification",
          "preprocessors":{

          },
          "learning_algorithms":{
            "auger_ml.algorithms.svm.SVC":{
              "C":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.0001,
                  25.0
                ],
                "tunable":true
              },
              "gamma":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.0001,
                  25.0
                ],
                "tunable":true
              },
              "degree":{
                "log":false,
                "type":"int",
                "bounds":[
                  1,
                  5
                ],
                "tunable":true
              },
              "kernel":{
                "type":"categorical",
                "values":[
                  "rbf",
                  "sigmoid",
                  "poly"
                ],
                "tunable":true
              },
              "probability":{
                "log":false,
                "type":"categorical",
                "values":[
                  true
                ],
                "tunable":false
              }
            },
            "auger_ml.algorithms.cat_boost.CatBoostClassifier":{
              "rsm":{
                "log":false,
                "type":"float",
                "bounds":[
                  0.5,
                  1.0
                ],
                "tunable":true
              },
              "depth":{
                "log":false,
                "type":"int",
                "bounds":[
                  3,
                  10
                ],
                "tunable":true
              },
              "l2_leaf_reg":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.001,
                  100.0
                ],
                "tunable":true
              },
              "border_count":{
                "log":false,
                "type":"int",
                "bounds":[
                  16,
                  128
                ],
                "tunable":true
              },
              "n_estimators":{
                "log":true,
                "type":"int",
                "bounds":[
                  100,
                  800
                ],
                "tunable":true
              },
              "learning_rate":{
                "log":false,
                "type":"float",
                "bounds":[
                  0.01,
                  0.3
                ],
                "tunable":true
              },
              "loss_function":{
                "type":"categorical",
                "values":[
                  "Logloss",
                  "MultiClass"
                ],
                "tunable":false
              },
              "model_size_reg":{
                "log":true,
                "type":"float",
                "bounds":[
                  0.001,
                  10.0
                ],
                "tunable":true
              },
              "allow_writing_files":{
                "type":"categorical",
                "values":[
                  false
                ],
                "tunable":false
              },
              "feature_border_type":{
                "type":"categorical",
                "values":[
                  "Median",
                  "UniformAndQuantiles",
                  "GreedyLogSum",
                  "MaxLogSum",
                  "MinEntropy"
                ],
                "tunable":true
              }
            }
          }
        }
      }
    },
    "global_config_dict":{
      "global":{
        "k_folds":5,
        "max_trials":250,
        "optimizers":[
          "auger_ml.optimizers.de_optimizer.DEEliminationOptimizer",
          "auger_ml.optimizers.skopt_async_optimizer.SkOptAsyncOptimizer",
          "auger_ml.warmstart_optimizer.WarmStartOptimizer"
        ],
        "thresh_col":0.95,
        "thresh_row":0.05,
        "thresh_var":0.05,
        "trainRatio":null,
        "n_comp_frac":0.2,
        "thresh_n_cols":50,
        "thresh_sparse":0.95,
        "max_total_time":60,
        "max_trial_time":6
      },
      "oversampling":{
        "SMOTE":{
          "kind":{
            "type":"categorical",
            "values":[
              "regular",
              "borderline1",
              "borderline2",
              "svm"
            ],
            "tunable":true
          },
          "ratio":{
            "type":"categorical",
            "values":[
              "auto",
              "minority",
              "majority",
              "not minority",
              "not minority",
              "all"
            ],
            "tunable":true
          }
        },
        "ADASYN":{
          "ratio":{
            "type":"categorical",
            "values":[
              "auto",
              "minority",
              "majority",
              "not minority",
              "not minority",
              "all"
            ],
            "tunable":true
          }
        },
        "RandomOverSampler":{
          "ratio":{
            "type":"categorical",
            "values":[
              "auto",
              "minority",
              "majority",
              "not minority",
              "not minority",
              "all"
            ],
            "tunable":true
          }
        }
      }
    },
    "preprocessors_space":{
      "nan.NanPreprocessor":{
        "thresh_col":0.95,
        "thresh_row":0.05,
        "skip_errors":true
      },
      "extra.ExtraPreprocessor":{
        "cyclic_cols":[

        ],
        "skip_errors":true,
        "interaction_cols":[

        ]
      },
      "scale.ScalePreprocessor":{
        "skip_errors":false
      },
      "sparse.SparsePreprocessor":{
        "n_comp_frac":0.2,
        "skip_errors":true,
        "thresh_sparse":0.95,
        "run_in_process":true
      },
      "date_time.DateTimePreprocessor":{
        "skip_errors":false,
        "datetime_cols":[

        ]
      },
      "eliminate.EliminatePreprocessor":{
        "thresh_var":0.05,
        "skip_errors":true
      },
      "time_series.ssa.SSAPreprocessor":{
        "lag_length":10,
        "skip_errors":false,
        "n_components":5
      },
      "categorical.CategoricalPreprocessor":{
        "cat_cols":[

        ],
        "skip_errors":false,
        "label_enc_cols":[

        ],
        "run_in_process":false,
        "max_categoricals_nunique":50
      },
      "time_series.resample.ResamplePreprocessor":{
        "sample_rate":null,
        "skip_errors":false,
        "window_size":1,
        "datetime_col":null
      },
      "time_series.embedding.EmbeddingPreprocessor":{
        "skip_errors":false,
        "embedding_dim":10
      },
      "time_series.interpolate.InterpolatePreprocessor":{
        "method":"linear",
        "skip_errors":false
      }
    },
    "regressor_config_dict":{
      "regression":{
        "scoring":[
          "explained_variance",
          "neg_median_absolute_error",
          "neg_mean_absolute_error",
          "neg_mean_squared_error",
          "neg_mean_squared_log_error",
          "r2",
          "neg_rmsle",
          "neg_mase",
          "neg_mape",
          "mda",
          "neg_rmse"
        ],
        "selectors":{

        },
        "preprocessors":{

        },
        "learning_algorithms":{
          "sklearn.svm.SVR":{
            "C":{
              "log":true,
              "type":"float",
              "bounds":[
                0.0001,
                25.0
              ],
              "tunable":true
            },
            "gamma":{
              "log":true,
              "type":"float",
              "bounds":[
                0.0001,
                25.0
              ],
              "tunable":true
            },
            "degree":{
              "log":false,
              "type":"int",
              "bounds":[
                1,
                5
              ],
              "tunable":true
            },
            "kernel":{
              "type":"categorical",
              "values":[
                "rbf",
                "sigmoid",
                "poly"
              ],
              "tunable":true
            },
            "epsilon":{
              "log":true,
              "type":"float",
              "bounds":[
                0.0001,
                1.0
              ],
              "tunable":true
            }
          },
          "auger_ml.algorithms.cat_boost.CatBoostRegressor":{
            "rsm":{
              "log":false,
              "type":"float",
              "bounds":[
                0.5,
                1.0
              ],
              "tunable":true
            },
            "depth":{
              "log":false,
              "type":"int",
              "bounds":[
                3,
                10
              ],
              "tunable":true
            },
            "l2_leaf_reg":{
              "log":true,
              "type":"float",
              "bounds":[
                0.001,
                100.0
              ],
              "tunable":true
            },
            "border_count":{
              "log":false,
              "type":"int",
              "bounds":[
                16,
                128
              ],
              "tunable":true
            },
            "n_estimators":{
              "log":true,
              "type":"int",
              "bounds":[
                100,
                800
              ],
              "tunable":true
            },
            "learning_rate":{
              "log":false,
              "type":"float",
              "bounds":[
                0.01,
                0.3
              ],
              "tunable":true
            },
            "loss_function":{
              "type":"categorical",
              "values":[
                "RMSE"
              ],
              "tunable":false
            },
            "model_size_reg":{
              "log":true,
              "type":"float",
              "bounds":[
                0.001,
                10.0
              ],
              "tunable":true
            },
            "allow_writing_files":{
              "type":"categorical",
              "values":[
                false
              ],
              "tunable":false
            },
            "feature_border_type":{
              "type":"categorical",
              "values":[
                "Median",
                "UniformAndQuantiles",
                "GreedyLogSum",
                "MaxLogSum",
                "MinEntropy"
              ],
              "tunable":true
            }
          }
        }
      }
    },
    "classifier_config_dict":{
      "classification":{
        "selectors":{

        },
        "preprocessors":{

        },
        "scoring_multi":[
          "accuracy",
          "f1_macro",
          "f1_micro",
          "f1_weighted",
          "neg_log_loss",
          "precision_macro",
          "precision_micro",
          "precision_weighted",
          "recall_macro",
          "recall_micro",
          "recall_weighted"
        ],
        "scoring_binary":[
          "accuracy",
          "average_precision",
          "f1",
          "f1_macro",
          "f1_micro",
          "f1_weighted",
          "neg_log_loss",
          "precision",
          "precision_macro",
          "precision_micro",
          "precision_weighted",
          "recall",
          "recall_macro",
          "recall_micro",
          "recall_weighted",
          "roc_auc",
          "cohen_kappa_score",
          "matthews_corrcoef"
        ],
        "learning_algorithms":{
          "auger_ml.algorithms.svm.SVC":{
            "C":{
              "log":true,
              "type":"float",
              "bounds":[
                0.0001,
                25.0
              ],
              "tunable":true
            },
            "gamma":{
              "log":true,
              "type":"float",
              "bounds":[
                0.0001,
                25.0
              ],
              "tunable":true
            },
            "degree":{
              "log":false,
              "type":"int",
              "bounds":[
                1,
                5
              ],
              "tunable":true
            },
            "kernel":{
              "type":"categorical",
              "values":[
                "rbf",
                "sigmoid",
                "poly"
              ],
              "tunable":true
            },
            "probability":{
              "log":false,
              "type":"categorical",
              "values":[
                true
              ],
              "tunable":false
            }
          },
          "sklearn.linear_model.LogisticRegression":{
            "C":{
              "log":true,
              "type":"float",
              "bounds":[
                0.0001,
                25.0
              ],
              "tunable":true
            },
            "solver":{
              "type":"categorical",
              "values":[
                "lbfgs"
              ],
              "tunable":false
            }
          }
        }
      }
    },
    "timeseries_config_dict":{
      "timeseries":{
        "scoring":[
          "explained_variance",
          "neg_median_absolute_error",
          "neg_mean_absolute_error",
          "neg_mean_squared_error",
          "neg_mean_squared_log_error",
          "r2",
          "neg_rmsle",
          "neg_mase",
          "neg_mape",
          "mda",
          "neg_rmse"
        ],
        "selectors":{

        },
        "preprocessors":{

        },
        "learning_algorithms":{
          "sklearn.svm.SVR":{
            "C":{
              "log":true,
              "type":"float",
              "bounds":[
                0.0001,
                25.0
              ],
              "tunable":true
            },
            "gamma":{
              "log":true,
              "type":"float",
              "bounds":[
                0.0001,
                25.0
              ],
              "tunable":true
            },
            "degree":{
              "log":false,
              "type":"int",
              "bounds":[
                1,
                5
              ],
              "tunable":true
            },
            "kernel":{
              "type":"categorical",
              "values":[
                "rbf",
                "sigmoid",
                "poly"
              ],
              "tunable":true
            },
            "epsilon":{
              "log":true,
              "type":"float",
              "bounds":[
                0.0001,
                1.0
              ],
              "tunable":true
            }
          },
          "auger_ml.algorithms.cat_boost.CatBoostRegressor":{
            "rsm":{
              "log":false,
              "type":"float",
              "bounds":[
                0.5,
                1.0
              ],
              "tunable":true
            },
            "depth":{
              "log":false,
              "type":"int",
              "bounds":[
                3,
                10
              ],
              "tunable":true
            },
            "l2_leaf_reg":{
              "log":true,
              "type":"float",
              "bounds":[
                0.001,
                100.0
              ],
              "tunable":true
            },
            "border_count":{
              "log":false,
              "type":"int",
              "bounds":[
                16,
                128
              ],
              "tunable":true
            },
            "n_estimators":{
              "log":true,
              "type":"int",
              "bounds":[
                100,
                800
              ],
              "tunable":true
            },
            "learning_rate":{
              "log":false,
              "type":"float",
              "bounds":[
                0.01,
                0.3
              ],
              "tunable":true
            },
            "loss_function":{
              "type":"categorical",
              "values":[
                "RMSE"
              ],
              "tunable":false
            },
            "model_size_reg":{
              "log":true,
              "type":"float",
              "bounds":[
                0.001,
                10.0
              ],
              "tunable":true
            },
            "allow_writing_files":{
              "type":"categorical",
              "values":[
                false
              ],
              "tunable":false
            },
            "feature_border_type":{
              "type":"categorical",
              "values":[
                "Median",
                "UniformAndQuantiles",
                "GreedyLogSum",
                "MaxLogSum",
                "MinEntropy"
              ],
              "tunable":true
            }
          }
        }
      }
    }
  },
  "trials_history":[
    {
      "uid":"83D2FE5F2B0A42F",
      "error":null,
      "score":0.4347826086956522,
      "budget":null,
      "ratio":1.0,
      "evaluation_time":0.4013018608093262,
      "algorithm_name":"sklearn.ensemble.RandomForestClassifier",
      "algorithm_params":{
        "bootstrap":true,
        "max_features":0.7951475142804721,
        "min_samples_leaf":13,
        "min_samples_split":18,
        "n_estimators":219,
        "n_jobs":1
      }
    },
    {
      "uid":"EAD1243A66A7419",
      "error":null,
      "score":0.5869565217391305,
      "budget":null,
      "ratio":1.0,
      "evaluation_time":0.3714199066162109,
      "algorithm_name":"sklearn.ensemble.RandomForestClassifier",
      "algorithm_params":{
        "bootstrap":true,
        "max_features":0.5384972025139909,
        "min_samples_leaf":8,
        "min_samples_split":12,
        "n_estimators":188,
        "n_jobs":1
      }
    }
  ],
  "optimizer_context":{
    "what":"ever"
  }
}
