version: 2.1
jobs:
  test:
    parameters:
      python_version:
        default: "3.7"
        type: string
    docker:
      - image: circleci/python:<< parameters.python_version >>
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python<< parameters.python_version >>/site-packages
      - restore_cache:
          key: dependencies-{{ arch }}-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "requirements.txt" }}
          key: dependencies-{{ arch }}-<< parameters.python_version >>-{{ .Branch }}
          key: dependencies-{{ arch }}-<< parameters.python_version >>
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: dependencies-{{ arch }}-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python<< parameters.python_version >>/site-packages"
      - run: pipenv run python setup.py test
      - store_artifacts:
          path: test-reports
          destination: test-reports

  # python2-tests:
  #   docker:
  #     - image: circleci/python:2.7.15
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - run:
  #         name: install dependencies
  #         command: |
  #           pip install -r requirements.txt --user
  #     - run:
  #         name: run tests
  #         command: |
  #           python $HOME/.local/lib/python2.7/site-packages/nose2
  #     - store_artifacts:
  #         path: test-reports
  #         destination: test-reports
  # python3-tests:
  #   docker:
  #     - image: circleci/python:3.6.1
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         keys:
  #         - v1-dependencies-{{ checksum "requirements.txt" }}
  #         - v1-dependencies-
  #     - run:
  #         name: install dependencies
  #         command: |
  #           python3 -m venv venv
  #           . venv/bin/activate
  #           make install
  #     - save_cache:
  #         paths:
  #           - ./venv
  #         key: v1-dependencies-{{ checksum "requirements.txt" }}
  #     - run:
  #         name: run tests
  #         command: |
  #           . venv/bin/activate
  #           make test
  #     - store_artifacts:
  #         path: test-reports
  #         destination: test-reports
workflows:
  version: 2.0
  test_and_deploy:
    jobs:
      - test:
        name: build-2.7
        python_version: "2.7"
      - test:
        name: build-3.6
        python_version: "3.6"
      - test:
        name: build-3.7
        python_version: "3.7"
  # build_and_deploy:
  #   jobs:
  #     - test:
  #         name: build2.7
  #         python_version: "2.7"
  #         filters:
  #           tags:
  #             only: /^v.*/
  #         name: build3.6
  #         python_version: "3.6"
  #         filters:
  #           tags:
  #             only: /^v.*/
  #           # branches:
  #           #   ignore: /.*/
  #     - test:
  #         name: build3.7
  #         python_version: "3.7"
  #         filters:
  #           tags:
  #             only: /^v.*/
            # branches:
            #   ignore: /.*/
      # - deploy:
      #     requires:
      #       - build2.7
      #       - build3.6
      #       - build3.7
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/


